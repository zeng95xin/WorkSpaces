<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bola.nwcl.dal.mybatis.mapper.MaintenanceMapper">
  <resultMap id="BaseResultMap" type="com.bola.nwcl.dal.mybatis.model.Maintenance">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="serial" jdbcType="VARCHAR" property="serial" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="prospecting_description" jdbcType="VARCHAR" property="prospectingDescription" />
    <result column="buser_id" jdbcType="BIGINT" property="buserId" />
    <result column="repair_main_id" jdbcType="BIGINT" property="repairMainId" />
    <result column="room_id" jdbcType="BIGINT" property="roomId" />
    <result column="man_hour_cost" jdbcType="BIGINT" property="manHourCost" />
    <result column="material_cost" jdbcType="BIGINT" property="materialCost" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="visit" jdbcType="INTEGER" property="visit" />
    <result column="coust_time" jdbcType="BIGINT" property="coustTime" />
    <result column="complete_time" jdbcType="TIMESTAMP" property="completeTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="grab_success" jdbcType="INTEGER" property="grabSuccess" />
    <result column="grab" jdbcType="INTEGER" property="grab" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="assign_time" jdbcType="TIMESTAMP" property="assignTime" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
    <result column="row_update_time" jdbcType="TIMESTAMP" property="rowUpdateTime" />
    <result column="community_id" jdbcType="BIGINT" property="communityId" />
    <result column="is_user_delete" jdbcType="INTEGER" property="isUserDelete" />
    <result column="expect_time" jdbcType="DOUBLE" property="expectTime" />
    <result column="delay_time" jdbcType="DOUBLE" property="delayTime" />
    <result column="complete_description" jdbcType="VARCHAR" property="completeDescription" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, serial, description, prospecting_description, buser_id, repair_main_id, room_id, 
    man_hour_cost, material_cost, status, visit, coust_time, complete_time, start_time, 
    order_time, grab_success, grab, reason, assign_time, row_add_time, row_update_time, 
    community_id, is_user_delete, expect_time, delay_time, complete_description
  </sql>
  <select id="selectByExample" parameterType="com.bola.nwcl.dal.mybatis.model.MaintenanceExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from n_maintenance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="queryExpand != null">
      ${queryExpand}
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit gte 1 and offset gte 0">
      limit #{limit} offset #{offset}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from n_maintenance
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from n_maintenance
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bola.nwcl.dal.mybatis.model.MaintenanceExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from n_maintenance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bola.nwcl.dal.mybatis.model.Maintenance">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into n_maintenance (id, serial, description, 
      prospecting_description, buser_id, repair_main_id, 
      room_id, man_hour_cost, material_cost, 
      status, visit, coust_time, 
      complete_time, start_time, order_time, 
      grab_success, grab, reason, 
      assign_time, row_add_time, row_update_time, 
      community_id, is_user_delete, expect_time, 
      delay_time, complete_description)
    values (#{id,jdbcType=BIGINT}, #{serial,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{prospectingDescription,jdbcType=VARCHAR}, #{buserId,jdbcType=BIGINT}, #{repairMainId,jdbcType=BIGINT}, 
      #{roomId,jdbcType=BIGINT}, #{manHourCost,jdbcType=BIGINT}, #{materialCost,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{visit,jdbcType=INTEGER}, #{coustTime,jdbcType=BIGINT}, 
      #{completeTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, #{orderTime,jdbcType=TIMESTAMP}, 
      #{grabSuccess,jdbcType=INTEGER}, #{grab,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, 
      #{assignTime,jdbcType=TIMESTAMP}, #{rowAddTime,jdbcType=TIMESTAMP}, #{rowUpdateTime,jdbcType=TIMESTAMP}, 
      #{communityId,jdbcType=BIGINT}, #{isUserDelete,jdbcType=INTEGER}, #{expectTime,jdbcType=DOUBLE}, 
      #{delayTime,jdbcType=DOUBLE}, #{completeDescription,jdbcType=VARCHAR})
  </insert>
  <select id="countByExample" parameterType="com.bola.nwcl.dal.mybatis.model.MaintenanceExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from n_maintenance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update n_maintenance
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.serial != null">
        serial = #{record.serial,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.prospectingDescription != null">
        prospecting_description = #{record.prospectingDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.buserId != null">
        buser_id = #{record.buserId,jdbcType=BIGINT},
      </if>
      <if test="record.repairMainId != null">
        repair_main_id = #{record.repairMainId,jdbcType=BIGINT},
      </if>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=BIGINT},
      </if>
      <if test="record.manHourCost != null">
        man_hour_cost = #{record.manHourCost,jdbcType=BIGINT},
      </if>
      <if test="record.materialCost != null">
        material_cost = #{record.materialCost,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.visit != null">
        visit = #{record.visit,jdbcType=INTEGER},
      </if>
      <if test="record.coustTime != null">
        coust_time = #{record.coustTime,jdbcType=BIGINT},
      </if>
      <if test="record.completeTime != null">
        complete_time = #{record.completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.grabSuccess != null">
        grab_success = #{record.grabSuccess,jdbcType=INTEGER},
      </if>
      <if test="record.grab != null">
        grab = #{record.grab,jdbcType=INTEGER},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.assignTime != null">
        assign_time = #{record.assignTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rowAddTime != null">
        row_add_time = #{record.rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rowUpdateTime != null">
        row_update_time = #{record.rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.communityId != null">
        community_id = #{record.communityId,jdbcType=BIGINT},
      </if>
      <if test="record.isUserDelete != null">
        is_user_delete = #{record.isUserDelete,jdbcType=INTEGER},
      </if>
      <if test="record.expectTime != null">
        expect_time = #{record.expectTime,jdbcType=DOUBLE},
      </if>
      <if test="record.delayTime != null">
        delay_time = #{record.delayTime,jdbcType=DOUBLE},
      </if>
      <if test="record.completeDescription != null">
        complete_description = #{record.completeDescription,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bola.nwcl.dal.mybatis.model.Maintenance">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update n_maintenance
    <set>
      <if test="serial != null">
        serial = #{serial,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="prospectingDescription != null">
        prospecting_description = #{prospectingDescription,jdbcType=VARCHAR},
      </if>
      <if test="buserId != null">
        buser_id = #{buserId,jdbcType=BIGINT},
      </if>
      <if test="repairMainId != null">
        repair_main_id = #{repairMainId,jdbcType=BIGINT},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=BIGINT},
      </if>
      <if test="manHourCost != null">
        man_hour_cost = #{manHourCost,jdbcType=BIGINT},
      </if>
      <if test="materialCost != null">
        material_cost = #{materialCost,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="visit != null">
        visit = #{visit,jdbcType=INTEGER},
      </if>
      <if test="coustTime != null">
        coust_time = #{coustTime,jdbcType=BIGINT},
      </if>
      <if test="completeTime != null">
        complete_time = #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="grabSuccess != null">
        grab_success = #{grabSuccess,jdbcType=INTEGER},
      </if>
      <if test="grab != null">
        grab = #{grab,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="assignTime != null">
        assign_time = #{assignTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rowAddTime != null">
        row_add_time = #{rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rowUpdateTime != null">
        row_update_time = #{rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="communityId != null">
        community_id = #{communityId,jdbcType=BIGINT},
      </if>
      <if test="isUserDelete != null">
        is_user_delete = #{isUserDelete,jdbcType=INTEGER},
      </if>
      <if test="expectTime != null">
        expect_time = #{expectTime,jdbcType=DOUBLE},
      </if>
      <if test="delayTime != null">
        delay_time = #{delayTime,jdbcType=DOUBLE},
      </if>
      <if test="completeDescription != null">
        complete_description = #{completeDescription,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 自定义sql -->
  <insert id="insertAndGetId" keyProperty="id" parameterType="com.bola.nwcl.dal.mybatis.model.Maintenance" useGeneratedKeys="true">
    insert into n_maintenance (id, serial, description, 
      prospecting_description, buser_id, repair_main_id, 
      room_id, man_hour_cost, material_cost, 
      status, reason, assign_time, 
      row_add_time, row_update_time)
    values (#{id,jdbcType=BIGINT}, #{serial,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{prospectingDescription,jdbcType=VARCHAR}, #{buserId,jdbcType=BIGINT}, #{repairMainId,jdbcType=BIGINT}, 
      #{roomId,jdbcType=BIGINT}, #{manHourCost,jdbcType=BIGINT}, #{materialCost,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, #{assignTime,jdbcType=TIMESTAMP}, 
      #{rowAddTime,jdbcType=TIMESTAMP}, #{rowUpdateTime,jdbcType=TIMESTAMP})
  </insert>
  
  <resultMap id="MaintenanceUserAllModelMap" type="com.bola.nwcl.api.model.MaintenanceUserAllModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="serial" jdbcType="VARCHAR" property="serial" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="prospecting_description" jdbcType="VARCHAR" property="prospectingDescription" />
    <result column="buser_id" jdbcType="BIGINT" property="buserId" />
    <result column="repair_main_id" jdbcType="BIGINT" property="repairMainId" />
    <result column="room_id" jdbcType="BIGINT" property="roomId" />
    <result column="man_hour_cost" jdbcType="BIGINT" property="manHourCost" />
    <result column="material_cost" jdbcType="BIGINT" property="materialCost" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="assign_time" jdbcType="TIMESTAMP" property="assignTime" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
    <result column="row_update_time" jdbcType="TIMESTAMP" property="rowUpdateTime" />
    <result column="repairManName" jdbcType="VARCHAR" property="repairManName" />
    <result column="repairManHeadPortrait" jdbcType="VARCHAR" property="repairManHeadPortrait" />
    <result column="repairManPhone" jdbcType="VARCHAR" property="repairManPhone" />
  </resultMap>
  <select id="getUserAllMaintenance" parameterType="map" resultMap="MaintenanceUserAllModelMap">
  	 select a.*,b.`name` repairManName,b.head_portrait repairManHeadPortrait,c.phone repairManPhone from n_maintenance a left outer join n_service_user b on a.repair_main_id = b.id left outer join n_repairman_detail c on a.repair_main_id=c.repairmain_id
	where 1=1
	<if test="buserId != null">
		and a.buser_id=#{buserId}
	</if>
	<if test="id != null">
		and a.id=#{id}
	</if>
	order by a.row_add_time desc
	<if test="limit != null and limit gte 1">
		limit #{limit}
	</if>
	<if test="offset != null and offset gte 0">
		offset #{offset}
	</if>
  </select>
  
  
  <!-- repair -->
  <resultMap id="RepairMaintenanceModelMap" type="com.bola.nwcl.api.model.repair.RepairMaintenanceModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="serial" jdbcType="VARCHAR" property="serial" />
    <result column="roomStr" jdbcType="VARCHAR" property="roomStr" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="prospecting_description" jdbcType="VARCHAR" property="prospectingDescription" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="rating_content" jdbcType="VARCHAR" property="ratingContent" />
    <result column="rating_Level" jdbcType="INTEGER" property="ratingLevel" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
  </resultMap>
	
  <select id="getRepairMaintenanceModel" parameterType="map" resultMap="RepairMaintenanceModelMap">
  	select a.reason,a.prospecting_description,a.id,a.serial,a.row_add_time,a.description,a.`status`,b.`name`,b.nickname,b.phone,CONCAT(e.`name`,d.`name`,c.floor,c.room_no) roomStr, h.rating_content,h.rating_level from n_maintenance a left outer join n_biz_user b on a.buser_id=b.id left outer join n_room c on c.id=a.room_id left outer join n_building d on c.building_id=d.id left outer join n_community e on e.id=d.community_id left outer join n_maintenance_rating h on h.maintenance_id = a.id 
	where 1=1
	<if test="repair_main_id != null">
		and a.repair_main_id=#{repair_main_id}
	</if>
	<if test="id != null">
		and a.id=#{id}
	</if>
	<if test="type != null and type == 1">
		and a.`status` in (0,1)
	</if>
	<if test="type != null and type == 2">
		and a.`status` in (2,3,4,5)
	</if>
	<if test="type != null and type == 3">
		and a.`status` in (-1,6,7)
	</if>
	order by a.row_add_time desc
	<if test="limit != null and limit gte 1">
		limit #{limit}
	</if>
	<if test="offset != null and offset gte 0">
		offset #{offset}
	</if>
  </select>
  <select id="getRepairMaintenanceModelCount" parameterType="map" resultType="java.lang.Integer">
  	select count(*) from n_maintenance a where a.repair_main_id=#{repair_main_id}
  	<if test="type != null and type == 1">
		and a.`status` in (0,1)
	</if>
	<if test="type != null and type == 2">
		and a.`status` in (2,3,4,5)
	</if>
	<if test="type != null and type == 3">
		and a.`status` in (-1,6,7)
	</if>
  </select>
</mapper>