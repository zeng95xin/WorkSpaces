<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bola.nwcl.dal.mybatis.mapper.RecommendMapper">
  <resultMap id="BaseResultMap" type="com.bola.nwcl.dal.mybatis.model.Recommend">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="buser_id" jdbcType="BIGINT" property="buserId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
    <result column="row_update_time" jdbcType="TIMESTAMP" property="rowUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, buser_id, title, description, type_id, row_add_time, row_update_time
  </sql>
  <select id="selectByExample" parameterType="com.bola.nwcl.dal.mybatis.model.RecommendExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from n_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="queryExpand != null">
      ${queryExpand}
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit gte 1 and offset gte 0">
      limit #{limit} offset #{offset}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from n_recommend
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from n_recommend
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bola.nwcl.dal.mybatis.model.RecommendExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from n_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bola.nwcl.dal.mybatis.model.Recommend">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into n_recommend (id, buser_id, title, 
      description, type_id, row_add_time, 
      row_update_time)
    values (#{id,jdbcType=BIGINT}, #{buserId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{typeId,jdbcType=BIGINT}, #{rowAddTime,jdbcType=TIMESTAMP}, 
      #{rowUpdateTime,jdbcType=TIMESTAMP})
  </insert>
  <select id="countByExample" parameterType="com.bola.nwcl.dal.mybatis.model.RecommendExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from n_recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update n_recommend
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.buserId != null">
        buser_id = #{record.buserId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=BIGINT},
      </if>
      <if test="record.rowAddTime != null">
        row_add_time = #{record.rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rowUpdateTime != null">
        row_update_time = #{record.rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bola.nwcl.dal.mybatis.model.Recommend">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update n_recommend
    <set>
      <if test="buserId != null">
        buser_id = #{buserId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="rowAddTime != null">
        row_add_time = #{rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rowUpdateTime != null">
        row_update_time = #{rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 自定义sql -->
  <insert id="insertAndGetId" keyProperty="id" parameterType="com.bola.nwcl.dal.mybatis.model.Recommend" useGeneratedKeys="true">
    insert into n_recommend (id, buser_id, title, 
      description, type_id, row_add_time, 
      row_update_time)
    values (#{id,jdbcType=BIGINT}, #{buserId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{typeId,jdbcType=BIGINT}, #{rowAddTime,jdbcType=TIMESTAMP}, 
      #{rowUpdateTime,jdbcType=TIMESTAMP})
  </insert>
  <resultMap id="RecommendModelMap" type="com.bola.nwcl.api.model.RecommendModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="buser_id" jdbcType="BIGINT" property="buserId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
    <result column="row_update_time" jdbcType="TIMESTAMP" property="rowUpdateTime" />
    <result column="type_title" jdbcType="VARCHAR" property="typeTitle" />
    <result column="rating_count" jdbcType="INTEGER" property="ratingCount" />
    <result column="zan_count" jdbcType="INTEGER" property="zanCount" />
    <result column="isBelongToCurrent" jdbcType="INTEGER" property="isBelongToCurrent" />
    <result column="isZan" jdbcType="INTEGER" property="isZan" />
    <result column="head_portrait" jdbcType="VARCHAR" property="headPortrait" />
  </resultMap>
  <select id="getAllRecommend" parameterType="map" resultMap="RecommendModelMap">
    select a.*,b.head_portrait,(CASE WHEN a.buser_id = #{buserId} THEN 1 ELSE 0 END) isBelongToCurrent,(select count(*) from n_recommend_rating c1 where c1.recommend_id=a.id )rating_count,(select count(*) from n_recommend_zan c2 where c2.recommend_id=a.id )zan_count,(CASE WHEN exists (select * from n_recommend_zan z where z.buser_id = #{buserId} and z.recommend_id = a.id ) THEN 1 ELSE 0 END) isZan 
    from n_recommend a left outer join n_biz_user b on a.buser_id=b.id where 1=1
	<if test="id != null and id gte 1">
      and a.id = #{id}
    </if>
    <if test="type != null and type gte 1">
      and a.type_id = #{type}
    </if>
	order by row_add_time desc
	<if test="limit != null and limit gte 1">
      limit #{limit}
    </if>
    <if test="offset != null and offset gte 0">
      offset #{offset}
    </if>
  </select>
  
  <!-- 业主市集首页信息 -->
  <resultMap id="OwnerFairIndexModelMap" type="com.bola.nwcl.api.model.indexes.OwnerFairIndexModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="img_path" jdbcType="VARCHAR" property="imgPath" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
  </resultMap>
  <select id="getOwnerFairIndex" parameterType="map" resultMap="OwnerFairIndexModelMap">
	select a.id,a.title, 1 type,a.row_add_time,b.img_path from n_recommend a left outer join (select * from n_recommend_img where id in (select min(id) from n_recommend_img group by recommend_id)) b on a.id = b.recommend_id union select a.id,a.title, 2 type,a.row_add_time,b.img_path from n_idlething a left outer join (select * from n_idlething_img where id in (select min(id) from n_idlething_img group by idlething_id)) b on a.id = b.idlething_id
	<if test="orderByClause != null">
    order by ${orderByClause}
    </if>
    <if test="limit != null and limit gte 1" >
    limit #{limit}
    </if>
    <if test="offset != null and offset gte 0" >
    offset #{offset}
    </if>
  </select>
  
</mapper>