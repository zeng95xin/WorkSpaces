<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bola.nwcl.dal.mybatis.mapper.RoomMapper">
  <resultMap id="BaseResultMap" type="com.bola.nwcl.dal.mybatis.model.Room">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="building_id" jdbcType="BIGINT" property="buildingId" />
    <result column="floor" jdbcType="VARCHAR" property="floor" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="room_no" jdbcType="VARCHAR" property="roomNo" />
    <result column="contact_people" jdbcType="VARCHAR" property="contactPeople" />
    <result column="contact_phone" jdbcType="VARCHAR" property="contactPhone" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="unit_no" jdbcType="VARCHAR" property="unitNo" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
    <result column="row_update_time" jdbcType="TIMESTAMP" property="rowUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, building_id, floor, unit, room_no, contact_people, contact_phone, note, unit_no, 
    row_add_time, row_update_time
  </sql>
  <select id="selectByExample" parameterType="com.bola.nwcl.dal.mybatis.model.RoomExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from n_room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="queryExpand != null">
      ${queryExpand}
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit gte 1 and offset gte 0">
      limit #{limit} offset #{offset}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from n_room
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from n_room
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bola.nwcl.dal.mybatis.model.RoomExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from n_room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bola.nwcl.dal.mybatis.model.Room">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into n_room (id, building_id, floor, 
      unit, room_no, contact_people, 
      contact_phone, note, unit_no, 
      row_add_time, row_update_time)
    values (#{id,jdbcType=BIGINT}, #{buildingId,jdbcType=BIGINT}, #{floor,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{roomNo,jdbcType=VARCHAR}, #{contactPeople,jdbcType=VARCHAR}, 
      #{contactPhone,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{unitNo,jdbcType=VARCHAR}, 
      #{rowAddTime,jdbcType=TIMESTAMP}, #{rowUpdateTime,jdbcType=TIMESTAMP})
  </insert>
  <select id="countByExample" parameterType="com.bola.nwcl.dal.mybatis.model.RoomExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from n_room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update n_room
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.buildingId != null">
        building_id = #{record.buildingId,jdbcType=BIGINT},
      </if>
      <if test="record.floor != null">
        floor = #{record.floor,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.roomNo != null">
        room_no = #{record.roomNo,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPeople != null">
        contact_people = #{record.contactPeople,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPhone != null">
        contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.unitNo != null">
        unit_no = #{record.unitNo,jdbcType=VARCHAR},
      </if>
      <if test="record.rowAddTime != null">
        row_add_time = #{record.rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rowUpdateTime != null">
        row_update_time = #{record.rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bola.nwcl.dal.mybatis.model.Room">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update n_room
    <set>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="floor != null">
        floor = #{floor,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="roomNo != null">
        room_no = #{roomNo,jdbcType=VARCHAR},
      </if>
      <if test="contactPeople != null">
        contact_people = #{contactPeople,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null">
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="unitNo != null">
        unit_no = #{unitNo,jdbcType=VARCHAR},
      </if>
      <if test="rowAddTime != null">
        row_add_time = #{rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rowUpdateTime != null">
        row_update_time = #{rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 自定义sql -->
  <insert id="insertAndGetId" keyProperty="id" parameterType="com.bola.nwcl.dal.mybatis.model.Room" useGeneratedKeys="true">
    insert into n_room (id, building_id, floor, 
      unit, room_no, contact_people, 
      contact_phone, note, unit_no, 
      row_add_time, row_update_time)
    values (#{id,jdbcType=BIGINT}, #{buildingId,jdbcType=BIGINT}, #{floor,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{roomNo,jdbcType=VARCHAR}, #{contactPeople,jdbcType=VARCHAR}, 
      #{contactPhone,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{unitNo,jdbcType=VARCHAR}, 
      #{rowAddTime,jdbcType=TIMESTAMP}, #{rowUpdateTime,jdbcType=TIMESTAMP})
  </insert>
  
  <resultMap id="RoomModelMap" type="com.bola.nwcl.api.model.RoomDetailModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <id column="community_id" jdbcType="BIGINT" property="communityId" />
    <id column="building_id" jdbcType="BIGINT" property="buildingId" />
    <result column="community_name" jdbcType="VARCHAR" property="community_name" />
    <result column="building_name" jdbcType="VARCHAR" property="building_name" />
    <result column="floor" jdbcType="VARCHAR" property="floor" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="roomNo" jdbcType="VARCHAR" property="roomNo" />
  </resultMap>
  
  <select id="getRoomDetail" parameterType="map" resultMap="RoomModelMap">
  	<!-- 获取指定房间详情,如果id为null,则获取所有房间详情 -->
    select r.id id,building_id,community_id,b.name building_name,c.name community_name,floor,unit,room_no roomNo from n_room r
	left outer join n_building b ON r.building_id = b.id
	left outer join n_community c ON c.id = b.community_id
	<if test="id != null">
		where r.id = #{id,jdbcType=BIGINT}
	</if>
	<if test="limit != null and limit gte 1">
    limit #{limit}
    </if>
    <if test="offset != null and offset gte 0">
    offset #{offset}
    </if>
  </select>
  <resultMap id="FloorModelMap" type="com.bola.nwcl.api.model.keeper.FloorModel">
    <result column="floor" jdbcType="VARCHAR" property="floor" />
  </resultMap>
  <select id="getAllFloor" parameterType="java.lang.Long" resultMap="FloorModelMap">
  	select distinct(floor) floor from n_room where id = #{id,jdbcType=BIGINT}
  </select>
  
  <!-- keeper -->
  <select id="searchRoom" parameterType="map" resultMap="RoomModelMap">
  	select r.id id,building_id,community_id,b.name building_name,c.name community_name,floor,unit,room_no roomNo from n_room r
	left outer join n_building b ON r.building_id = b.id
	left outer join n_community c ON c.id = b.community_id
	<if test="keyword != null">
    where #{keyword} like CONCAT('%',b.name,'%')
    </if>
	<if test="keyword.length() &gt; 2">
    and #{keyword} like CONCAT('%',r.room_no,'%')
    </if>
  </select>
</mapper>