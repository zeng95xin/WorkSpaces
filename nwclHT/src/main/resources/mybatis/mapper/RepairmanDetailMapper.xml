<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bola.nwcl.dal.mybatis.mapper.RepairmanDetailMapper">
  <resultMap id="BaseResultMap" type="com.bola.nwcl.dal.mybatis.model.RepairmanDetail">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="repairmain_id" jdbcType="BIGINT" property="repairmainId" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="serial" jdbcType="VARCHAR" property="serial" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
    <result column="row_update_time" jdbcType="TIMESTAMP" property="rowUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, repairmain_id, detail, status, serial, phone, row_add_time, row_update_time
  </sql>
  <select id="selectByExample" parameterType="com.bola.nwcl.dal.mybatis.model.RepairmanDetailExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from n_repairman_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="queryExpand != null">
      ${queryExpand}
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit gte 1 and offset gte 0">
      limit #{limit} offset #{offset}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from n_repairman_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from n_repairman_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bola.nwcl.dal.mybatis.model.RepairmanDetailExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from n_repairman_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bola.nwcl.dal.mybatis.model.RepairmanDetail">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into n_repairman_detail (id, repairmain_id, detail, 
      status, serial, phone, 
      row_add_time, row_update_time)
    values (#{id,jdbcType=BIGINT}, #{repairmainId,jdbcType=BIGINT}, #{detail,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{serial,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{rowAddTime,jdbcType=TIMESTAMP}, #{rowUpdateTime,jdbcType=TIMESTAMP})
  </insert>
  <select id="countByExample" parameterType="com.bola.nwcl.dal.mybatis.model.RepairmanDetailExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from n_repairman_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update n_repairman_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.repairmainId != null">
        repairmain_id = #{record.repairmainId,jdbcType=BIGINT},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.serial != null">
        serial = #{record.serial,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.rowAddTime != null">
        row_add_time = #{record.rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rowUpdateTime != null">
        row_update_time = #{record.rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bola.nwcl.dal.mybatis.model.RepairmanDetail">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update n_repairman_detail
    <set>
      <if test="repairmainId != null">
        repairmain_id = #{repairmainId,jdbcType=BIGINT},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="serial != null">
        serial = #{serial,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="rowAddTime != null">
        row_add_time = #{rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rowUpdateTime != null">
        row_update_time = #{rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="RepairmainModelMap" type="com.bola.nwcl.api.model.repairman.RepairmainModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="head_portrait" jdbcType="VARCHAR" property="headPortrait" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="complete" jdbcType="INTEGER" property="complete" />
    <result column="waitrepair" jdbcType="INTEGER" property="waitrepair" />
    <result column="ratingCount" jdbcType="INTEGER" property="ratingCount" />
    <result column="repairing" jdbcType="INTEGER" property="repairing" />
  </resultMap>
  <select id="getAllRepairman" parameterType="java.lang.Integer" resultMap="RepairmainModelMap">
	select a.id,a.`nickname`,a.head_portrait,b.phone,b.detail,b.`status`,(select count(*) from n_maintenance m1 where m1.repair_main_id=a.id and m1.`status` in (6,7)) complete,(select count(*) from n_maintenance m2 where m2.repair_main_id=a.id and m2.`status` = 1) waitrepair,(select count(*) from n_maintenance_rating m3 where m3.maintenance_id in (select id from n_maintenance where repair_main_id=a.id)) ratingCount ,(select count(*) from n_maintenance m1 where m1.repair_main_id=a.id and m1.`status` in (2,3,4,5)) repairing from n_service_user a left outer join n_repairman_detail b on a.id=b.repairmain_id where a.role = #{repair_service_user_type} and a.id in (select suser_id from n_scheduling where SYSDATE() > duty_start_time and SYSDATE() &lt; duty_end_time and community_id = #{communityId});
  </select>
</mapper>