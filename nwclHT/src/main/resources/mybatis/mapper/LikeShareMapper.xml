<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bola.nwcl.dal.mybatis.mapper.LikeShareMapper">
  <resultMap id="BaseResultMap" type="com.bola.nwcl.dal.mybatis.model.LikeShare">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="buser_id" jdbcType="BIGINT" property="buserId" />
    <result column="room_id" jdbcType="BIGINT" property="roomId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="share_type" jdbcType="VARCHAR" property="shareType" />
    <result column="is_sensitive" jdbcType="INTEGER" property="isSensitive" />
    <result column="read_count" jdbcType="INTEGER" property="readCount" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
    <result column="row_update_time" jdbcType="TIMESTAMP" property="rowUpdateTime" />
    <result column="community_id" jdbcType="BIGINT" property="communityId" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="is_user_delete" jdbcType="INTEGER" property="isUserDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, buser_id, room_id, title, content, share_type, is_sensitive, read_count, row_add_time, 
    row_update_time, community_id, label, is_user_delete
  </sql>
  <select id="selectByExample" parameterType="com.bola.nwcl.dal.mybatis.model.LikeShareExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from n_like_share
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="queryExpand != null">
      ${queryExpand}
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit gte 1 and offset gte 0">
      limit #{limit} offset #{offset}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from n_like_share
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from n_like_share
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bola.nwcl.dal.mybatis.model.LikeShareExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from n_like_share
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bola.nwcl.dal.mybatis.model.LikeShare">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into n_like_share (id, buser_id, room_id, 
      title, content, share_type, 
      is_sensitive, read_count, row_add_time, 
      row_update_time, community_id, label, 
      is_user_delete)
    values (#{id,jdbcType=BIGINT}, #{buserId,jdbcType=BIGINT}, #{roomId,jdbcType=BIGINT}, 
      #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{shareType,jdbcType=VARCHAR}, 
      #{isSensitive,jdbcType=INTEGER}, #{readCount,jdbcType=INTEGER}, #{rowAddTime,jdbcType=TIMESTAMP}, 
      #{rowUpdateTime,jdbcType=TIMESTAMP}, #{communityId,jdbcType=BIGINT}, #{label,jdbcType=VARCHAR}, 
      #{isUserDelete,jdbcType=INTEGER})
  </insert>
  <select id="countByExample" parameterType="com.bola.nwcl.dal.mybatis.model.LikeShareExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from n_like_share
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update n_like_share
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.buserId != null">
        buser_id = #{record.buserId,jdbcType=BIGINT},
      </if>
      <if test="record.roomId != null">
        room_id = #{record.roomId,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.shareType != null">
        share_type = #{record.shareType,jdbcType=VARCHAR},
      </if>
      <if test="record.isSensitive != null">
        is_sensitive = #{record.isSensitive,jdbcType=INTEGER},
      </if>
      <if test="record.readCount != null">
        read_count = #{record.readCount,jdbcType=INTEGER},
      </if>
      <if test="record.rowAddTime != null">
        row_add_time = #{record.rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rowUpdateTime != null">
        row_update_time = #{record.rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.communityId != null">
        community_id = #{record.communityId,jdbcType=BIGINT},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.isUserDelete != null">
        is_user_delete = #{record.isUserDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bola.nwcl.dal.mybatis.model.LikeShare">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update n_like_share
    <set>
      <if test="buserId != null">
        buser_id = #{buserId,jdbcType=BIGINT},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="shareType != null">
        share_type = #{shareType,jdbcType=VARCHAR},
      </if>
      <if test="isSensitive != null">
        is_sensitive = #{isSensitive,jdbcType=INTEGER},
      </if>
      <if test="readCount != null">
        read_count = #{readCount,jdbcType=INTEGER},
      </if>
      <if test="rowAddTime != null">
        row_add_time = #{rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rowUpdateTime != null">
        row_update_time = #{rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="communityId != null">
        community_id = #{communityId,jdbcType=BIGINT},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="isUserDelete != null">
        is_user_delete = #{isUserDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 自定义sql -->
  <insert id="insertAndGetId" keyProperty="id" parameterType="com.bola.nwcl.dal.mybatis.model.LikeShare" useGeneratedKeys="true">
    insert into n_like_share (id, buser_id, title, 
      content, share_type, is_sensitive, 
      read_count, row_add_time, row_update_time
      )
    values (#{id,jdbcType=BIGINT}, #{buserId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{shareType,jdbcType=VARCHAR}, #{isSensitive,jdbcType=INTEGER}, 
      #{readCount,jdbcType=INTEGER}, #{rowAddTime,jdbcType=TIMESTAMP}, #{rowUpdateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <!-- buser -->
  <resultMap id="LikeShareSimpleModelMap" type="com.bola.nwcl.api.model.likeshare.LikeShareSimpleModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="buser_id" jdbcType="BIGINT" property="buserId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="share_type" jdbcType="VARCHAR" property="shareType" />
    <result column="is_sensitive" jdbcType="INTEGER" property="isSensitive" />
    <result column="read_count" jdbcType="INTEGER" property="readCount" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
    <result column="row_update_time" jdbcType="TIMESTAMP" property="rowUpdateTime" />
    <result column="ratingCount" jdbcType="INTEGER" property="ratingCount" />
    <result column="zanCount" jdbcType="INTEGER" property="zanCount" />
    <result column="isZan" jdbcType="INTEGER" property="isZan" />
    <result column="isBelongToCurrent" jdbcType="INTEGER" property="isBelongToCurrent" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="head_portrait" jdbcType="VARCHAR" property="headPortrait" />
  </resultMap>
  <select id="getAllLikeShareByUser" parameterType="map" resultMap="LikeShareSimpleModelMap">
  	select a.*,(select count(*) from n_like_share_rating b where b.like_share_id = a.id)ratingCount,(select count(*) from n_like_share_zan c where c.like_share_id = a.id)zanCount,(case when exists (select * from n_like_share_zan z where z.buser_id = #{buserId} and z.like_share_id = a.id ) THEN 1 ELSE 0 END)isZan,(case when a.buser_id = #{buserId} then 1 else 0 end)isBelongToCurrent,d.`name`,d.nickname,d.head_portrait from n_like_share a left outer join n_biz_user d on a.buser_id = d.id where 1=1
    <if test="id != null">
    and a.id = #{id}
    </if>
    <if test="getType != null and getType == 1">
    and a.buser_id = #{buserId}
    </if>
  	order by a.row_add_time desc
    <if test="limit != null and limit gte 1">
    limit #{limit}
    </if>
    <if test="offset != null and offset gte 0">
    offset #{offset}
    </if>
  </select>
  <resultMap id="FridendsIndexModelMap" type="com.bola.nwcl.api.model.indexes.FridendsIndexModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="head_portrait" jdbcType="VARCHAR" property="headPortrait" />
    <result column="read_count" jdbcType="INTEGER" property="readCount" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
  </resultMap>
  <select id="getFriendsIndexInfo" parameterType="map" resultMap="FridendsIndexModelMap">
  	select a.id,a.title,a.content,1 type,a.read_count,a.row_add_time,a.row_update_time,u1.head_portrait from n_like_share a left outer join n_biz_user u1 on u1.id = a.buser_id union select b.id,b.title,b.content,2 type,b.read_count,b.row_add_time,b.row_update_time,u2.head_portrait from n_neighbor_help b left outer join n_biz_user u2 on u2.id = b.buser_id
	<if test="orderByClause != null">
    order by ${orderByClause}
    </if>
    <if test="limit != null and limit gte 1">
    limit #{limit}
    </if>
    <if test="offset != null and offset gte 0">
    offset #{offset}
    </if>
  </select>
</mapper>