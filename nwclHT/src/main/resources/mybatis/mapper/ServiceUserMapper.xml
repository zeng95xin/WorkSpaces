<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bola.nwcl.dal.mybatis.mapper.ServiceUserMapper">
  <resultMap id="BaseResultMap" type="com.bola.nwcl.dal.mybatis.model.ServiceUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="head_portrait" jdbcType="VARCHAR" property="headPortrait" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="community_id" jdbcType="BIGINT" property="communityId" />
    <result column="building_id" jdbcType="BIGINT" property="buildingId" />
    <result column="row_add_time" jdbcType="TIMESTAMP" property="rowAddTime" />
    <result column="row_update_time" jdbcType="TIMESTAMP" property="rowUpdateTime" />
    <result column="registration_id" jdbcType="VARCHAR" property="registrationId" />
    <result column="huanxin_account" jdbcType="VARCHAR" property="huanxinAccount" />
    <result column="huanxin_password" jdbcType="VARCHAR" property="huanxinPassword" />
    <result column="biz_status" jdbcType="INTEGER" property="bizStatus" />
    <result column="sign_status" jdbcType="INTEGER" property="signStatus" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, nickname, head_portrait, sex, account, password, status, role, community_id, 
    building_id, row_add_time, row_update_time, registration_id, huanxin_account, huanxin_password, 
    biz_status, sign_status, dept_id
  </sql>
  <select id="selectByExample" parameterType="com.bola.nwcl.dal.mybatis.model.ServiceUserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from n_service_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="queryExpand != null">
      ${queryExpand}
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit gte 1 and offset gte 0">
      limit #{limit} offset #{offset}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from n_service_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from n_service_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bola.nwcl.dal.mybatis.model.ServiceUserExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from n_service_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bola.nwcl.dal.mybatis.model.ServiceUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into n_service_user (id, name, nickname, 
      head_portrait, sex, account, 
      password, status, role, 
      community_id, building_id, row_add_time, 
      row_update_time, registration_id, huanxin_account, 
      huanxin_password, biz_status, sign_status, 
      dept_id)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{headPortrait,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, #{role,jdbcType=INTEGER}, 
      #{communityId,jdbcType=BIGINT}, #{buildingId,jdbcType=BIGINT}, #{rowAddTime,jdbcType=TIMESTAMP}, 
      #{rowUpdateTime,jdbcType=TIMESTAMP}, #{registrationId,jdbcType=VARCHAR}, #{huanxinAccount,jdbcType=VARCHAR}, 
      #{huanxinPassword,jdbcType=VARCHAR}, #{bizStatus,jdbcType=INTEGER}, #{signStatus,jdbcType=INTEGER}, 
      #{deptId,jdbcType=BIGINT})
  </insert>
  <select id="countByExample" parameterType="com.bola.nwcl.dal.mybatis.model.ServiceUserExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from n_service_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update n_service_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.headPortrait != null">
        head_portrait = #{record.headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=INTEGER},
      </if>
      <if test="record.communityId != null">
        community_id = #{record.communityId,jdbcType=BIGINT},
      </if>
      <if test="record.buildingId != null">
        building_id = #{record.buildingId,jdbcType=BIGINT},
      </if>
      <if test="record.rowAddTime != null">
        row_add_time = #{record.rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rowUpdateTime != null">
        row_update_time = #{record.rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.registrationId != null">
        registration_id = #{record.registrationId,jdbcType=VARCHAR},
      </if>
      <if test="record.huanxinAccount != null">
        huanxin_account = #{record.huanxinAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.huanxinPassword != null">
        huanxin_password = #{record.huanxinPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.bizStatus != null">
        biz_status = #{record.bizStatus,jdbcType=INTEGER},
      </if>
      <if test="record.signStatus != null">
        sign_status = #{record.signStatus,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bola.nwcl.dal.mybatis.model.ServiceUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update n_service_user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="headPortrait != null">
        head_portrait = #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="communityId != null">
        community_id = #{communityId,jdbcType=BIGINT},
      </if>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="rowAddTime != null">
        row_add_time = #{rowAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rowUpdateTime != null">
        row_update_time = #{rowUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registrationId != null">
        registration_id = #{registrationId,jdbcType=VARCHAR},
      </if>
      <if test="huanxinAccount != null">
        huanxin_account = #{huanxinAccount,jdbcType=VARCHAR},
      </if>
      <if test="huanxinPassword != null">
        huanxin_password = #{huanxinPassword,jdbcType=VARCHAR},
      </if>
      <if test="bizStatus != null">
        biz_status = #{bizStatus,jdbcType=INTEGER},
      </if>
      <if test="signStatus != null">
        sign_status = #{signStatus,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 自定义sql -->
  <insert id="insertAndGetId" keyProperty="id" parameterType="com.bola.nwcl.dal.mybatis.model.ServiceUser" useGeneratedKeys="true">
    insert into n_service_user (id, name, nickname, 
      head_portrait, sex, account, 
      password, status, role, 
      community_id, building_id, row_add_time, 
      row_update_time, registration_id, huanxin_account, 
      huanxin_password, biz_status, sign_status, 
      dept_id)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{headPortrait,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, #{role,jdbcType=INTEGER}, 
      #{communityId,jdbcType=BIGINT}, #{buildingId,jdbcType=BIGINT}, #{rowAddTime,jdbcType=TIMESTAMP}, 
      #{rowUpdateTime,jdbcType=TIMESTAMP}, #{registrationId,jdbcType=VARCHAR}, #{huanxinAccount,jdbcType=VARCHAR}, 
      #{huanxinPassword,jdbcType=VARCHAR}, #{bizStatus,jdbcType=INTEGER}, #{signStatus,jdbcType=INTEGER}, 
      #{deptId,jdbcType=BIGINT})
  </insert>
  
  
  <resultMap id="KeeperUserModelMap" type="com.bola.nwcl.api.model.keeper.KeeperUserModel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="head_portrait" jdbcType="VARCHAR" property="headPortrait" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <select id="getKeeperModel" parameterType="map" resultMap="KeeperUserModelMap">
  	select a.id,a.`name`,a.nickname,a.sex,a.head_portrait,b.phone,b.detail,b.`status` from n_service_user a
	left outer join n_housekeeper_detail b on a.id=b.keeper_id
    <if test="ids != null">
		where a.id in (${ids})
    </if>
  </select>
</mapper>